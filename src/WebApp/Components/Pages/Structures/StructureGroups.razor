@using Microsoft.AspNetCore.Authorization
@using Kundenportal.AdminUi.WebApp.Resources
@using Kundenportal.AdminUi.Application.Models
@attribute [Route($"/{Route}")]
@rendermode InteractiveServer
@attribute [Authorize]

@{
	string? structureGroupExplanation = Texts.StructureGroupExplanation;
	string? structureExplanation = Texts.StructureExplanation;
	bool showExplanationAlert = !string.IsNullOrWhiteSpace(structureGroupExplanation);
}

<PageTitle>@Texts.TitleStructureGroups</PageTitle>
<h3>@Texts.TitleStructureGroups</h3>

@if (showExplanationAlert)
{
	<div class="my-2">
		<DisplayMessage Type="DisplayMessageType.Info">
			<div class="d-inline-flex flex-column gap-2">
				<div>@structureGroupExplanation</div>
				@if (!string.IsNullOrWhiteSpace(structureExplanation))
				{
					<div>@structureExplanation</div>
				}
			</div>
		</DisplayMessage>
	</div>
}


<div class="d-flex gap-3 align-items-center mb-4">
	<a href="@EditStructureGroup.RouteCreate" class="link-as-button d-inline-flex justify-content-center align-items-center" title="@Texts.TitleCreateStructureGroup">
		<i class="bi-plus fs-5"></i>
		<span class="mx-1">@Texts.TitleCreateStructureGroup</span>
	</a>
</div>

@if (_model.PendingStructureGroups.Count > 0)
{
	<h4>@Texts.TitlePendingStructureGroups</h4>
	<div id="pending-structure-groups">
		<ul>
			@foreach (PendingStructureGroup pendingGroup in _model.PendingStructureGroups)
			{
				<li>@pendingGroup.Name</li>
			}
		</ul>
	</div>
	<hr/>
}

<h4>@Texts.TitleStructureGroups</h4>
<div id="structure-groups">
	@if (_model.StructureGroups.Count > 0)
	{
		@foreach (StructureGroup group in _model.StructureGroups)
		{
			string optionsId = $"options-{group.Id}";

			<div class="d-flex justify-content-between">
				<div id="group-@(group.Id)-details" class="d-flex w-100 justify-content-between">
					<span class="w-100">@group.Name</span>
					<span class="w-100">@group.Path</span>
				</div>
				<div class="dropdown">
					<button type="button"
					        title="Optionen"
					        class="all-unset cursor-pointer dropdown-focusable px-2 py-1"
					        id="@optionsId"
					        data-bs-toggle="dropdown"
					        aria-expanded="false">
						<Ellipsis Width="25" TitleText=@(string.Format(Texts.TitleTextStructureGroupOptions, group.Name))/>
					</button>
					<ul class="dropdown-menu" aria-labelledby="@optionsId">
						<StructureGroupOverviewOption
							Title="@Texts.TitleEditStructureGroup"
							OnClick="() => OnEditStructureGroupClicked(group.Id)"
							AdditionalCss="bi-pencil"/>
						<StructureGroupOverviewOption
							Title="@Texts.TitleCreateStructure"
							OnClick="OnCreateStructureClicked"
							AdditionalCss="bi-plus fs-5"/>
					</ul>
				</div>
			</div>
		}
	}
	else
	{
		<p>@Texts.NoStructureGroups</p>
	}
</div>
